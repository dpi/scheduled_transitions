<?php

/**
 * @file
 * Installation hooks for Scheduled Transitions module.
 */

declare(strict_types = 1);

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Adds message template config.
 *
 * @param array $sandbox
 *   Sandbox.
 */
function scheduled_transitions_update_8001(array &$sandbox): void {
  $configFactory = \Drupal::configFactory();
  $configFactory->getEditable('scheduled_transitions.settings')
    ->set('message_transition_latest', 'Scheduled transition: transitioning latest revision from [scheduled-transitions:from-state] to [scheduled-transitions:to-state]')
    ->set('message_transition_historical', 'Scheduled transition: Copied revision #[scheduled-transitions:from-revision-id] and changed from [scheduled-transitions:from-state] to [scheduled-transitions:to-state]')
    ->set('message_transition_copy_latest_draft', 'Scheduled transition: reverted [scheduled-transitions:latest-state] revision #[scheduled-transitions:latest-revision-id] back to top')
    ->save(TRUE);
}

/**
 * Add the 'entity_revision_langcode' field to 'scheduled_transition' entities.
 */
function scheduled_transitions_update_8002() {
  $storage_definition = BaseFieldDefinition::create('language')
    ->setLabel(\t('Content entity revision language'))
    ->setDescription(\t('The revision language of the entity this scheduled transition is for.'))
    ->setRequired(TRUE)
    ->setCardinality(1);
  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('entity_revision_langcode', 'scheduled_transition', 'scheduled_transition', $storage_definition);
}
